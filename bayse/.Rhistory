#実行
sim2(A=1,WS=4,Str =8 ,Tgh = 8,Saving = 5,AP= 0, D="D6" ,Subtitle = "Entropy VS Knight",SpecialSave = 4)
sim2(A="D6",WS=4,Str =7 ,Tgh = 8,Saving = 3,AP= 1, D=1 ,Subtitle = "Spitter VS Knight")
#ダメージ回数を先に決めてから、それに達するまでにかかる回数のシミュレーション
howmany.to.kill<-function(A,WS,Attack,Toughness,Saving,AP,D,Wound,Dreroll=0,SpecialSave=7,Melta=FALSE){
chikuseki_damage<-0
i <- 0
repeat {
i<-i+1
APs<-AProll(damageroll(hitroll(A,WS),Attack,Toughness,Dreroll),Saving,AP,SpecialSave)
if (D=="D3"){
j<-0
while(j<APs){
D2=ceiling(runif(1)*3)
chikuseki_damage<-chikuseki_damage+D2
j<-j+1}
}
if (D=="D6"){
j<-0
while(j<APs){
if(Melta){D2<-max(ceiling(runif(2)*6))}else{D2<-ceiling(runif(1)*6)}
print(D2)
chikuseki_damage<-chikuseki_damage+D2
print(chikuseki_damage)
j<-j+1}
}
if(is.numeric(D)==TRUE){
chikuseki_damage<-chikuseki_damage+D*AProll(damageroll(hitroll(A,WS),Attack,Toughness,Dreroll),Saving,AP,SpecialSave)
}
if(chikuseki_damage >= Wound) break
}
return(i)
}
#実行
howmany.to.kill("D6",3,5,4,2,3,2,10,Dreroll = 0,SpecialSave = 4)
#50000回のシミュレーション
sim3<-function(A,WS,Attack,Toughness,Saving,AP,D,Wound,Subtitle="",Dreroll=0,SpecialSave=7,Accum=FALSE,Melta=FALSE){
times<-c()
for (j in 1:50000){
times[j]<-howmany.to.kill(A,WS,Attack,Toughness,Saving,AP,D,Wound,Dreroll,SpecialSave,Melta)
}
plot(table(times)/500,main=paste("How many times are required to kill them?",Subtitle),xlab="Attacks(times)",ylab="Probability(%)")
if (Accum){
plot(cumsum(table(times)/500),main=paste("How many times are required to kill them?",Subtitle),xlab="Attacks(times or less)",ylab="Probability(%)")
}
print(table(times)/500)
return(times)
}
#実行
par(mfcol=c(2,3))
sim3(A="D6",WS=1,Attack=7,Toughness=4,Saving=3,AP=1,D=1,Wound=24,"Spitter VS Intersessor")
sim3
sim2(A="D6",WS=4,Str =7 ,Tgh = 8,Saving = 3,AP= 1, D=1 ,Subtitle = "Spitter VS Knight")
#実行
sim2(A=1,WS=4,Str =8 ,Tgh = 8,Saving = 5,AP= 0, D="D6" ,Subtitle = "Entropy VS Knight",SpecialSave = 4)
sim2(A="D6",WS=4,Str =10 ,Tgh = 8,Saving = 3,AP= 1, D=1 ,Subtitle = "Demolisher VS Primaris")
sim2(A="D6",WS=4,Str =10 ,Tgh = 8,Saving = 3,AP= 1, D=1 ,Subtitle = "Demolisher")
sim2(A="D6",WS=ws,Str =10 ,Tgh = 4,Saving = 3,AP= 3, D="D6" ,Subtitle = "Demolisher")
ws=4
sim2(A="D6",WS=ws,Str =10 ,Tgh = 4,Saving = 3,AP= 3, D="D6" ,Subtitle = "Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = 4,Saving = 3,AP= 3, D="1" ,Subtitle = "Ex plasma")
sim2(A="D6",WS=ws,Str =7 ,Tgh = 4,Saving = 3,AP= 3, D=1 ,Subtitle = "Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = 4,Saving = 3,AP= 0, D=1 ,Subtitle = "Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = 4,Saving = 3,AP= 2, D="D3" ,Subtitle = "Battle")
t=4
s=3
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Demolisher")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= -3, D="D6" ,Subtitle = "Vanquisher",melta=TRUE)
#実行
par(mfcol=c(2,4))
ws=4
t=4
s=3
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "Battle")
sim2(A="D6",WS=ws,Str =6 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "Eradicator")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= -3, D="D6" ,Subtitle = "Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = 4,Saving = 3,AP= 1, D="D6" ,Subtitle = "Autocannon")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "Autocannon")
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "Gatling")
#実行
par(mfcol=c(2,4))
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "Battle")
sim2(A="D6",WS=ws,Str =6 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "Eradicator")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "Autocannon")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "\n Autocannon")
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "\n Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "\n Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Battle")
sim2(A="D6",WS=ws,Str =6 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Eradicator")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "\n Autocannon")
#実行
par(mfcol=c(2,4))
ws=3
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "\n Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "\n Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Battle")
sim2(A="D6",WS=ws,Str =6 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Eradicator")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "\n Autocannon")
sim2(A="D6",WS=4,Str =7 ,Tgh = 8,Saving = 3,AP= 1, D=1 ,Subtitle = "Spitter VS Knight")
ws=2
t=4
s=3
sim2(A="D6",WS=ws,Str =10 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Demolisher")
sim2(A="D6",WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 3, D=1 ,Subtitle = "\n Ex plasma")
sim2(A=20,WS=ws,Str =5 ,Tgh = t,Saving = s,AP= 0, D=1 ,Subtitle = "\n Gatling")
sim2(A="D6",WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Battle")
sim2(A="D6",WS=ws,Str =6 ,Tgh = t,Saving = s,AP= 2, D="D3" ,Subtitle = "\n Eradicator")
sim2(A=1,WS=ws,Str =8 ,Tgh = t,Saving = s,AP= 3, D="D6" ,Subtitle = "\n Vanquisher")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D="D6" ,Subtitle = "\n Autocannon")
sim2(A=4,WS=ws,Str =7 ,Tgh = t,Saving = s,AP= 1, D=2 ,Subtitle = "\n Autocannon")
#実行
par(mfcol=c(1,3))
sim2(A=4,WS=4,Str =7 ,Tgh = t,Saving = s,AP= 1, D=2 ,Subtitle = "\n Autocannon")
sim2(A=4,WS=3,Str =7 ,Tgh = t,Saving = s,AP= 1, D=2 ,Subtitle = "\n Autocannon")
sim2(A=4,WS=2,Str =7 ,Tgh = t,Saving = s,AP= 1, D=2 ,Subtitle = "\n Autocannon")
library(readr)
library(dplyr)
library(ggplot2)
library(GGally)
library(parsnip)
library(yardstick)
install.packages("GGally")
install.packages("parsnip")
install.packages("yardstick")
library(parsnip)
library(GGally)
library(yardstick)
# 母集団モデルから訓練データとテストデータをサンプリングする。
X1 <- rnorm(n = 100, mean = 0, sd = 1)
X2 <- rnorm(n = 100, mean = 0, sd = 1)
epsilon <- rnorm(n = 100, mean = 0, sd = 1)
y <- 1.0 + (-1) * X1^2 + epsilon
train <- tibble(X1, X2, y)
X1 <- rnorm(n = 10000, mean = 0, sd = 1)
X2 <- rnorm(n = 10000, mean = 0, sd = 1)
epsilon <- rnorm(n = 10000, mean = 0, sd = 1)
y <- 1.0 + (-1) * X1^2 + epsilon
test <- tibble(X1, X2, y)
# 訓練データの可視化
ggpairs(train)
train
# モデル構築
dtr_under <- decision_tree(mode = "regression", tree_depth = 1)
fit_under <- d_under %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル構築
d_under <- decision_tree(mode = "regression", tree_depth = 1)
fit_under <- d_under %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル評価
pred_under_train <- predict(fit_under, train) %>% bind_cols(train)
metrics_under_train <- pred_under_train %>% metrics(truth = y, estimate = .pred)
metrics_under_train
pred_under_test <- predict(fit_under, test) %>% bind_cols(test)
metrics_under_test <- pred_under_test %>% metrics(truth = y, estimate = .pred)
metrics_under_test
fit_under$fit$variable.importance
# モデル構築
dtr_middle <- decision_tree(mode = "regression", tree_depth = 3)
fit_middle <- dtr_middle %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル評価
pred_middle_train <- predict(fit_middle, train) %>% bind_cols(train)
metrics_middle_train <- pred_middle_train %>% metrics(truth = y, estimate = .pred)
metrics_middle_train
pred_middle_test <- predict(fit_middle, test) %>% bind_cols(test)
metrics_middle_test <- pred_middle_test %>% metrics(truth = y, estimate = .pred)
metrics_middle_test
fit_middle$fit$variable.importance
# モデル構築
dtr_over <- decision_tree(mode = "regression", tree_depth = 4)
fit_over <- dtr_over %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル評価
pred_over_train <- predict(fit_over, train) %>% bind_cols(train)
metrics_over_train <- pred_over_train %>% metrics(truth = y, estimate = .pred)
metrics_over_train
pred_over_test <- predict(fit_over, test) %>% bind_cols(test)
metrics_over_test <- pred_over_test %>% metrics(truth = y, estimate = .pred)
metrics_over_test
fit_over$fit$variable.importance
# モデル構築
dtr_under <- decision_tree(mode = "regression", tree_depth = 1)
fit_under <- dtr_under %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル評価
pred_under_train <- predict(fit_under, train) %>% bind_cols(train)
metrics_under_train <- pred_under_train %>% metrics(truth = y, estimate = .pred)
metrics_under_train
fit_under$fit$variable.importance
# モデル評価
pred_under_train <- predict(fit_under, train) %>% bind_cols(train)
metrics_under_train <- pred_under_train %>% metrics(truth = y, estimate = .pred)
metrics_under_train
# モデル構築
dtr_over <- decision_tree(mode = "regression", tree_depth = 4)
fit_over <- dtr_over %>% set_engine("rpart") %>% fit(y ~ ., data = train)
# モデル評価
pred_over_train <- predict(fit_over, train) %>% bind_cols(train)
metrics_over_train <- pred_over_train %>% metrics(truth = y, estimate = .pred)
metrics_over_train
pred_over_test <- predict(fit_over, test) %>% bind_cols(test)
metrics_over_test <- pred_over_test %>% metrics(truth = y, estimate = .pred)
metrics_over_test
fit_over$fit$variable.importance
rnorm(3)
rnorm(3,-3,4)
c(rnorm(7,-3,4),rnorm(8,2,1))
x2<-c(rnorm(7,4,1),rnorm(8,-1,3))
y<-c(1,1,1,1,1,1,1,0,0,0,0,0,0,0,0)
data.frame(x1,x2,y)
x1<-c(rnorm(7,-3,4),rnorm(8,2,1))
x2<-c(rnorm(7,4,1),rnorm(8,-1,3))
y<-c(1,1,1,1,1,1,1,0,0,0,0,0,0,0,0)
data.frame(x1,x2,y)
y<-c(1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1)
data.frame(x1,x2,y)
w<-seq(1, 1, length = 15)
w
w<-seq(1, 1, length = 15)*1/15
w
data.frame(x1,x2,y,w)
Sys.setenv(MAKEFLAGS="-j4")
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
library("rstan")
library(rstan)
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
install.packages("openssl",repos="https://cloud.r-project.org/",dependencies = TRUE)
library(openssl)
install.packages("openssl",repos="https://cloud.r-project.org/",dependencies = TRUE)
library(openssl)
install.packages("openssl",repos="https://cloud.r-project.org/",dependencies = TRUE)
install.packages("openssl")
install.packages("libssl-dev")
install.packages("openssl")
install.packages("openssl",repos="https://cloud.r-project.org/",dependencies = TRUE)
library(openssl)
library(rstan)
install.packages("rstan",repos="https://cloud.r-project.org/",dependencies = TRUE)
install.packages("shinystan",repos="https://cloud.r-project.org/",dependencies = TRUE)
runif(1000,0,1)
r<-runif(1000,0,1)
hist(r)
r<-runif(1000,0,1)
tenki<-1
if (tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}
elif(r<0.9){
tenki2<-2
}
else{
tenki2<-3
}
}
tenki<-1
if (tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}elif(r<0.9){
tenki2<-2
}else{
tenki2<-3
}
}
tenki<-1
if (tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){tenki2<-1}elif(r<0.9){tenki2<-2}else{tenki2<-3}
}
if(3==3){
print(3)
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){tenki2<-1
}elif(r<0.9){
tenki2<-2
}else{
tenki2<-3}
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}elif(r<0.9){
tenki2<-2
}else{
tenki2<-3}
}
if(3==3){
print(3)
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}elif(r<0.9){
tenki2<-2
}else{
tenki2<-3
}
}
tenki<-1
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}elif(r<0.9){
tenki2<-2
}else{
tenki2<-3
}
}
if(tenki==1){
r<-rnorm(1,0,1)
}
if(tenki==1){
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1
}
if(r<0.9 and r>0.7){
tenki2<-2}
if(r>0.9){
tenki2<-3
}
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1}
if(r<0.9 and r>0.7){
tenki2<-2}
if(r>0.9){
tenki2<-3
}
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1}
if(r<0.9 and r>0.7){
tenki2<-2}
if(r>0.9){
tenki2<-3}
}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){
tenki2<-1}
if(r<0.9 and r>0.7){
tenki2<-2}
if(r>0.9){
tenki2<-3}}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){tenki2<-1}if(r<0.9 and r>0.7){tenki2<-2}if(r>0.9){tenki2<-3}}
if(tenki==1){
r<-rnorm(1,0,1)
if(r<0.7){tenki2<-1} if(r<0.9 and r>0.7){tenki2<-2} if(r>0.9){tenki2<-3}}
localLevelModel_1<-"
data{
int n;
vector[n] Nile;
}
parameters{
real mu;
real<lower=0> sigmaV;
}
model{
for(i in 1:n){
Nile[i]~normal(mu,sqrt(sigmaV));
}
}
"
Nile
NileData<-list(Nile=as.numeric(Nile),n=length(Nile))
NileData
set.seed(1)
Nilemodel1<-stan(
model_code = localLevelModel_1,
data=NileData,
iter=1100,
warmup=100,
thin=1,
chains=3)
Nilemodel1
library(rstan)
localLevelModel_1<-"
data{
int n;
vector[n] Nile;
}
parameters{
real mu;
real<lower=0> sigmaV;
}
model{
for(i in 1:n){
Nile[i]~normal(mu,sqrt(sigmaV));
}
}
"
Nile
NileData<-list(Nile=as.numeric(Nile),n=length(Nile))
NileData
set.seed(1)
Nilemodel1<-stan(
model_code = localLevelModel_1,
data=NileData,
iter=1100,
warmup=100,
thin=1,
chains=3)
Nilemodel1
traceplot(Nilemodel1)
stan_hist(Nilemodel1)
Y=c(42,32,27,21,17,12,10,10,9,6,4,4,3,3,3,3,2,2,1)
data=list(N=length(Y),Y=Y)
data
library(stan)
library(rstan)
setwd("~/sugakubunka-statistics/bayse")
fit=stan(file="modelbook.stan",data)
fit=stan(model_code ="modelbook.stan",data)
fit=stan(model_name ="modelbook.stan",data)
fit=stan(model_name ="modelbook.stan",data=data)
fit=stan(model_code ="modelbook.stan",data=data)
library(rstan)
fit=stan(model_code ="modelbook.stan",data=data)
fit=stan(model_name ="modelbook.stan",data)
fit=stan(model_name ="modelbook.stan",data=data)
fit<-stan(model_name ="modelbook.stan",data=data)
fit<-stan(model_name ="modelbook.stan",data=data)
fit<-stan(model_name ="modelbook.stan",data=dataiter=1100,
warmup=100,
thin=1,
chains=3)
fit<-stan(model_name ="modelbook.stan",data=dataiter=1100,warmup=100,thin=1,chains=3)
fit<-stan(model_name = "modelbook.stan",data=dataiter=1100,warmup=100,thin=1,chains=3)
fit<-stan(model_name = "modelbook.stan",data=data,dataiter=1100,warmup=100,thin=1,chains=3)
fit<-stan(model_name = "modelbook.stan",data=data,iter=1100,warmup=100,thin=1,chains=3)
library(rstan)
fit<-stan(model_name = "modelbook.stan",data=data,iter=1100,warmup=100,thin=1,chains=3)
fit<-stan(model_name = "modelbook.stan",data=data)
fit<-stan(model_name = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit
Y=c(42,32,27,21,17,12,10,10,9,6)#,4,4,3,3,3,3,2,2,1)
data=list(N=length(Y),Y=Y)
data
library(rstan)
fit<-stan(file = "modelbook.stan",data=data)
fit
Y=c(42,32,27,21)#,17,12,10,10,9,6)#,4,4,3,3,3,3,2,2,1)
data=list(N=length(Y),Y=Y)
data
fit<-stan(file = "modelbook.stan",data=data)
fit
dY=diff(Y)
dY
Y=c(42,32,27,21,17,12,10,10,9,6,4,4,3,3,3,3,2,2,1)
dY=diff(Y)
dY
data=list(N=length(Y),Y=dY)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
data=list(N=length(dY),Y=dY)
fit<-stan(file = "modelbook.stan",data=data)
fit
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit<-stan(file = "modelbook.stan",data=data)
fit
data
-dY
data=list(N=length(dY),Y=-dY)
fit<-stan(file = "modelbook.stan",data=data)
fit
